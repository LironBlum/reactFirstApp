{"ast":null,"code":"var _jsxFileName = \"/Users/lironblum/dev/side/reactUdemy/reactFirstApp/src/App.js\";\nimport React, { Component } from 'react';\nimport Person from './Persons/Person/Person';\nimport './App.css';\nimport styled from \"styled-components\";\nimport ErrorBoundary from './ErrorBoundary/ErrorBoundary';\nconst StyledButten = styled.button`\n    background-color: ${props => props.alt ? 'red' : 'green'};\n    color: white;\n    font: inherit;\n    border: 1px solid blue;\n    padings: 8px;\n    cursor: pointer;\n\n    &:hover{\n      background-color: lightgreen;\n      color: black;\n    }\n`;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: '1',\n        name: 'Joana',\n        age: 22\n      }, {\n        id: '2',\n        name: 'Joan',\n        age: 18\n      }, {\n        id: '3',\n        name: 'Jo',\n        age: 15\n      }],\n      showPersons: true\n    };\n\n    this.handleNameChangeByClick = newName => {\n      console.log(\"handleNameChangeByClick executed\");\n      this.setState({\n        persons: [{\n          id: '1',\n          name: newName,\n          age: 22\n        }, {\n          id: '2',\n          name: newName,\n          age: 18\n        }, {\n          id: '3',\n          name: newName,\n          age: 15\n        }]\n      });\n    };\n\n    this.handleNameChange = (event, id) => {\n      console.log(\"handleNameChange executed\");\n      const person_index = this.state.persons.findIndex(person => {\n        return person.id === id;\n      });\n      const chosen_person = { ...this.state.persons[person_index] //create new object and not mutate the state directly \n\n      };\n      chosen_person.name = event.target.value;\n      const persons = [...this.state.persons];\n      persons[person_index] = chosen_person;\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePersonsHandler = (event, id) => {\n      console.log(\"togglePersonsHandler executed\");\n      const is_show = this.state.showPersons;\n      this.setState({\n        showPersons: !is_show\n      });\n    };\n\n    this.deletePersonHandler = persons_index => {\n      console.log(\"deletePersonHandler executed\");\n      const persons = [...this.state.persons];\n      persons.splice(persons_index, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n  }\n\n  render() {\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, this.state.persons.map((person, index) => {\n        return /*#__PURE__*/React.createElement(ErrorBoundary, {\n          key: person.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(Person, {\n          click: () => this.deletePersonHandler(index),\n          name: person.name,\n          age: person.age,\n          changed: event => this.handleNameChange(event, person.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 51\n          }\n        }));\n      }));\n    }\n\n    const classes = [];\n\n    if (this.state.persons.length <= 2) {\n      classes.push('red');\n    }\n\n    if (this.state.persons.length <= 1) {\n      classes.push('bold');\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p1\", {\n      className: classes.join(' '),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, \"Hello, world!\"), /*#__PURE__*/React.createElement(StyledButten, {\n      alt: this.state.showPersons,\n      onClick: this.togglePersonsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, \"Toggle persons\"), persons);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/lironblum/dev/side/reactUdemy/reactFirstApp/src/App.js"],"names":["React","Component","Person","styled","ErrorBoundary","StyledButten","button","props","alt","App","state","persons","id","name","age","showPersons","handleNameChangeByClick","newName","console","log","setState","handleNameChange","event","person_index","findIndex","person","chosen_person","target","value","togglePersonsHandler","is_show","deletePersonHandler","persons_index","splice","render","map","index","classes","length","push","join"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Person from './Persons/Person/Person';\nimport './App.css';\nimport styled from \"styled-components\";\nimport ErrorBoundary from './ErrorBoundary/ErrorBoundary';\n\nconst StyledButten = styled.button`\n    background-color: ${props => props.alt ? 'red' : 'green'};\n    color: white;\n    font: inherit;\n    border: 1px solid blue;\n    padings: 8px;\n    cursor: pointer;\n\n    &:hover{\n      background-color: lightgreen;\n      color: black;\n    }\n`;\n\nclass App extends Component {\n  state = {\n    persons: [\n      { id: '1', name: 'Joana', age: 22 },\n      { id: '2', name: 'Joan', age: 18 },\n      { id: '3', name: 'Jo', age: 15 },\n    ],\n    showPersons: true\n  }\n\n  // Two way binding example\n  handleNameChangeByClick = (newName) => {\n    console.log(\"handleNameChangeByClick executed\");\n    this.setState({\n      persons: [{ id: '1', name: newName, age: 22 },\n      { id: '2', name: newName, age: 18 },\n      { id: '3', name: newName, age: 15 }]\n    })\n  }\n\n  handleNameChange = (event, id) => {\n    console.log(\"handleNameChange executed\");\n    const person_index = this.state.persons.findIndex(person => {\n      return person.id === id;\n    });\n\n    const chosen_person = {\n      ...this.state.persons[person_index] //create new object and not mutate the state directly \n    };\n\n    chosen_person.name = event.target.value;\n    const persons = [...this.state.persons];\n    persons[person_index] = chosen_person;\n\n    this.setState({\n      persons: persons\n    })\n  }\n  togglePersonsHandler = (event, id) => {\n    console.log(\"togglePersonsHandler executed\");\n    const is_show = this.state.showPersons;\n    this.setState({ showPersons: !is_show });\n  }\n\n  deletePersonHandler = (persons_index) => {\n    console.log(\"deletePersonHandler executed\")\n    const persons = [...this.state.persons];\n    persons.splice(persons_index, 1);\n    this.setState({ persons: persons });\n  }\n\n  render() {\n    let persons = null;\n    if (this.state.showPersons) {\n      persons = (\n        <div>\n          {this.state.persons.map((person, index) => {\n            return <ErrorBoundary key={person.id}><Person\n              click={() => this.deletePersonHandler(index)}\n              name={person.name}\n              age={person.age}\n              changed={(event) => this.handleNameChange(event, person.id)} />\n            </ErrorBoundary>\n          })}\n        </div>\n      );\n    }\n\n    const classes = [];\n    if (this.state.persons.length <= 2) {\n      classes.push('red');\n    }\n    if (this.state.persons.length <= 1) {\n      classes.push('bold');\n    }\n    return (\n      <div className=\"App\">\n        <p1 className={classes.join(' ')}>Hello, world!</p1>\n        <StyledButten\n          alt={\n            this.state.showPersons\n          }\n          onClick={this.togglePersonsHandler}>Toggle persons\n        </StyledButten>\n        {persons}\n      </div>\n\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}