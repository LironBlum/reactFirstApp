{"ast":null,"code":"var _jsxFileName = \"/Users/lironblum/dev/side/reactUdemy/reactFirstApp/src/ErrorBoundary/ErrorBoundary.jsx\";\nimport React, { Component } from \"react\";\n\nclass ErrorBoundary extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hasError: false,\n      errorMsg: \"\"\n    };\n\n    this.componentDidCatch = (err, info) => {\n      //will be executed whenever a component wrapped by ErrorBoundary throws an error\n      this.setState({\n        errorMsg: err,\n        hasError: true\n      });\n    };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 14\n        }\n      }, this.state.errorMsg);\n    } else {\n      return this.props.children;\n    }\n  }\n\n}\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["/Users/lironblum/dev/side/reactUdemy/reactFirstApp/src/ErrorBoundary/ErrorBoundary.jsx"],"names":["React","Component","ErrorBoundary","state","hasError","errorMsg","componentDidCatch","err","info","setState","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCE,KADoC,GAC5B;AACNC,MAAAA,QAAQ,EAAE,KADJ;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KAD4B;;AAAA,SAMpCC,iBANoC,GAMhB,CAACC,GAAD,EAAMC,IAAN,KAAe;AACjC;AACA,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAEE,GAAZ;AAAiBH,QAAAA,QAAQ,EAAE;AAA3B,OAAd;AACD,KATmC;AAAA;;AAWpCM,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKP,KAAL,CAAWC,QAAf,EAAyB;AACvB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKD,KAAL,CAAWE,QAAhB,CAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAKM,KAAL,CAAWC,QAAlB;AACD;AACF;;AAjBmC;;AAmBtC,eAAeV,aAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n    errorMsg: \"\"\n  };\n\n  componentDidCatch = (err, info) => {\n    //will be executed whenever a component wrapped by ErrorBoundary throws an error\n    this.setState({ errorMsg: err, hasError: true });\n  };\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>{this.state.errorMsg}</h1>;\n    } else {\n      return this.props.children;\n    }\n  }\n}\nexport default ErrorBoundary;\n"]},"metadata":{},"sourceType":"module"}